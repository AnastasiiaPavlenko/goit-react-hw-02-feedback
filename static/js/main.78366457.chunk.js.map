{"version":3,"sources":["Buttons/Buttons.module.css","Statistics/Statistics.module.css","NoFeedbackGiven/NoFeedbackGiven.module.css","Buttons/Buttons.jsx","Statistics/Statistics.jsx","NoFeedbackGiven/NoFeedbackGiven.jsx","App.js","index.js"],"names":["module","exports","Buttons","value","this","props","addFeedback","className","styles","buttons","button","type","onClick","handleChange","Component","Statistics","title","statistics","good","neutral","bad","totalFeedbacks","NoFeedbackGiven","feedback","feedbackInfo","App","state","setState","countTotalFeedback","countPositiveFeedbackPercentage","total","positiveFeedbackPercentage","Math","round","ReactDOM","render","document","getElementById"],"mappings":"sIACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,OAAS,0B,qBCA9DD,EAAOC,QAAU,CAAC,MAAQ,0BAA0B,WAAa,iC,kBCAjED,EAAOC,QAAU,CAAC,SAAW,oC,gKCsBdC,E,qLAbEC,GACTC,KAAKC,MAAMC,YAAYH,K,+BAGjB,IAAD,OACL,OAAO,yBAAKI,UAAWC,IAAOC,SAC1B,4BAAQF,UAAWC,IAAOE,OAAQC,KAAK,SAASC,QAAS,kBAAM,EAAKC,aAAa,UAAjF,QACA,4BAAQN,UAAWC,IAAOE,OAAQC,KAAK,SAASC,QAAS,kBAAM,EAAKC,aAAa,aAAjF,WACA,4BAAQN,UAAWC,IAAOE,OAAQC,KAAK,SAASC,QAAS,kBAAM,EAAKC,aAAa,SAAjF,Y,GAdUC,a,gBCmBPC,EAnBI,SAACV,GAAD,OACf,oCACI,0BAAME,UAAWC,IAAOQ,OAAxB,gBACA,wBAAIT,UAAWC,IAAOS,YAClB,qCAAWZ,EAAMa,MACjB,wCAAcb,EAAMc,SACpB,oCAAUd,EAAMe,KAChB,sCAAYf,EAAMgB,qB,iBCCfC,EARS,SAACjB,GAAD,OACpB,yBAAKE,UAAWC,IAAOe,UAAWlB,EAAMmB,iBC6C7BC,E,2MA5CbC,MAAQ,CACNR,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPd,YAAc,SAACH,GACC,SAAVA,EACF,EAAKwB,SAAS,CAAET,KAAM,EAAKQ,MAAMR,KAAO,IACrB,YAAVf,EACT,EAAKwB,SAAS,CAAER,QAAS,EAAKO,MAAMP,QAAU,IAC3B,QAAVhB,GACT,EAAKwB,SAAS,CAAEP,IAAK,EAAKM,MAAMN,IAAM,K,EAI1CQ,mBAAqB,WAAO,IAAD,EACM,EAAKF,MAEpC,OAHyB,EACjBR,KADiB,EACXC,QADW,EACFC,K,EAKzBS,gCAAkC,WAChC,IAAMC,EAAQ,EAAKF,qBAEfG,EAAiD,IAD7B,EAAKL,MAAMR,KACwBY,EAE3D,OAAIA,EAAQ,EACJ,GAAN,OAAUE,KAAKC,MAAMF,GAArB,4BAFiB,wB,wEAQX,IAAD,EACwB3B,KAAKsB,MAA5BR,EADD,EACCA,KAAMC,EADP,EACOA,QAASC,EADhB,EACgBA,IACvB,OAAO,oCACL,uDACA,kBAAC,EAAD,CAASM,MAAOtB,KAAKsB,MAAOpB,YAAaF,KAAKE,cAC9C,kBAAC,EAAD,CAAYY,KAAMA,EAAMC,QAASA,EAASC,IAAKA,EAAKC,eAAgBjB,KAAKwB,qBACzE,kBAAC,EAAD,CAAiBJ,aAAcpB,KAAKyB,uC,GAzCxBf,aCAlBoB,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.78366457.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"buttons\":\"Buttons_buttons__24m2Z\",\"button\":\"Buttons_button__1f3_R\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Statistics_title__1vBSV\",\"statistics\":\"Statistics_statistics__24llH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"feedback\":\"NoFeedbackGiven_feedback__3t1PZ\"};","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './Buttons.module.css';\n\nclass Buttons extends Component {\n    static propTypes = {\n        state: PropTypes.object.isRequired,\n        addFeedback: PropTypes.func.isRequired,\n    }\n\n    handleChange(value) {\n        this.props.addFeedback(value);\n    }\n\n    render() {\n        return <div className={styles.buttons}>\n            <button className={styles.button} type=\"button\" onClick={() => this.handleChange(\"good\")}>good</button>\n            <button className={styles.button} type=\"button\" onClick={() => this.handleChange(\"neutral\")}>neutral</button>\n            <button className={styles.button} type=\"button\" onClick={() => this.handleChange(\"bad\")}>bad</button>\n        </div>\n    };\n};\n\nexport default Buttons;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './Statistics.module.css';\n\nconst Statistics = (props) => (\n    <>\n        <span className={styles.title}> Statistics </span>\n        <ul className={styles.statistics} >\n            <li>Good: {props.good}</li>\n            <li>Neutral: {props.neutral}</li>\n            <li>Bad: {props.bad}</li>\n            <li>Total: {props.totalFeedbacks()}</li>\n        </ul>\n    </>\n);\n\nStatistics.propTypes = {\n    good: PropTypes.number.isRequired,\n    neutral: PropTypes.number.isRequired,\n    bad: PropTypes.number.isRequired,\n    totalFeedbacks: PropTypes.func.isRequired,\n};\n\nexport default Statistics;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './NoFeedbackGiven.module.css';\n\nconst NoFeedbackGiven = (props) => (\n    <div className={styles.feedback}>{props.feedbackInfo()}</div>\n);\n\nNoFeedbackGiven.propTypes = {\n    feedbackInfo: PropTypes.func.isRequired,\n};\n\nexport default NoFeedbackGiven;","import React, { Component } from 'react';\nimport Buttons from './Buttons/Buttons';\nimport Statistics from './Statistics/Statistics';\nimport NoFeedbackGiven from './NoFeedbackGiven/NoFeedbackGiven';\n\nclass App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  addFeedback = (value) => {\n    if (value === \"good\") {\n      this.setState({ good: this.state.good + 1 });\n    } else if (value === \"neutral\") {\n      this.setState({ neutral: this.state.neutral + 1 });\n    } else if (value === \"bad\") {\n      this.setState({ bad: this.state.bad + 1 });\n    };\n  };\n\n  countTotalFeedback = () => {\n    const { good, neutral, bad } = this.state;\n    let totalFeedbacksNum = good + neutral + bad;\n    return totalFeedbacksNum;\n  };\n\n  countPositiveFeedbackPercentage = () => {\n    const total = this.countTotalFeedback();\n    let positiveFeedbacks = this.state.good;\n    let positiveFeedbackPercentage = positiveFeedbacks * 100 / total;\n    const noFeedback = \"No feedback is given\";\n    if (total > 0) {\n      return `${Math.round(positiveFeedbackPercentage)} % of positive feedbacks`;\n    } else {\n      return noFeedback;\n    }\n  };\n\n  render() {\n    const { good, neutral, bad } = this.state;\n    return <>\n      <h1> Please Leave Feedback </h1>\n      <Buttons state={this.state} addFeedback={this.addFeedback} />\n      <Statistics good={good} neutral={neutral} bad={bad} totalFeedbacks={this.countTotalFeedback} />\n      <NoFeedbackGiven feedbackInfo={this.countPositiveFeedbackPercentage} />\n    </>\n  }\n};\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}